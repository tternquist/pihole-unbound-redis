server:
  verbosity: 1
  cache-max-ttl: 86400
  # Time to live minimum for RRsets and messages in the cache. If the minimum
  # kicks in, the data is cached for longer than the domain owner intended,
  # and thus less queries are made to look up the data. Zero makes sure the
  # data in the cache is as the domain owner intended, higher values,
  # especially more than an hour or so, can lead to trouble as the data in
  # the cache does not match up with the actual data any more.
  cache-min-ttl: 300
  
  ###########################################################################
  # PERFORMANCE SETTINGS
  ###########################################################################
  # https://nlnetlabs.nl/documentation/unbound/howto-optimise/

  # Number of slabs in the infrastructure cache. Slabs reduce lock contention
  # by threads. Must be set to a power of 2.
  infra-cache-slabs: 4

  # Number of slabs in the key cache. Slabs reduce lock contention by
  # threads. Must be set to a power of 2. Setting (close) to the number
  # of cpus is a reasonable guess.
  key-cache-slabs: 4

  # Number of slabs in the message cache. Slabs reduce lock contention by
  # threads. Must be set to a power of 2. Setting (close) to the number of
  # cpus is a reasonable guess.
  msg-cache-slabs: 4

  # The number of queries that every thread will service simultaneously. If
  # more queries arrive that need servicing, and no queries can be jostled
  # out (see jostle-timeout), then the queries are dropped.
  # This is best set at half the number of the outgoing-range.
  # This Unbound instance was compiled with libevent so it can efficiently
  # use more than 1024 file descriptors.
  outgoing-range: 8192
  num-queries-per-thread: 4096

  # The number of threads to create to serve clients.
  # This is set dynamically at run time to effectively use available CPUs
  # resources
  num-threads: 4


  # Number of bytes size of the RRset cache.
  # Use roughly twice as much rrset cache memory as msg cache memory
  # more cache memory, rrset=msg*2
  rrset-cache-size: 100m
  msg-cache-size: 50m

  # Number of slabs in the RRset cache. Slabs reduce lock contention by
  # threads. Must be set to a power of 2.
  rrset-cache-slabs: 4

  # Do no insert authority/additional sections into response messages when
  # those sections are not required. This reduces response size
  # significantly, and may avoid TCP fallback for some responses. This may
  # cause a slight speedup.
  minimal-responses: yes

  # # Fetch the DNSKEYs earlier in the validation process, when a DS record
  # is encountered. This lowers the latency of requests at the expense of
  # little more CPU usage.
  prefetch: yes

  # Fetch the DNSKEYs earlier in the validation process, when a DS record is
  # encountered. This lowers the latency of requests at the expense of little
  # more CPU usage.
  prefetch-key: yes

  # Have unbound attempt to serve old responses from cache with a TTL of 0 in
  # the response without waiting for the actual resolution to finish. The
  # actual resolution answer ends up in the cache later on.
  serve-expired: yes

  # Open dedicated listening sockets for incoming queries for each thread and
  # try to set the SO_REUSEPORT socket option on each socket. May distribute
  # incoming queries to threads more evenly.
  so-reuseport: yes

 # Larger socket buffer.  OS may need config.
  so-rcvbuf: 8m
  so-sndbuf: 8m


remote-control:
    # Before enabling, attach shell and perform the following
    # $ mkdir /etc/unbound/keys
    # $ unbound-control-setup -d /etc/unbound/keys
    control-enable: yes # set to no on first setup
    server-key-file: "/etc/unbound/keys/unbound_server.key"
    server-cert-file: "/etc/unbound/keys/unbound_server.pem"
    control-key-file: "/etc/unbound/keys/unbound_control.key"
    control-cert-file: "/etc/unbound/keys/unbound_control.pem"
